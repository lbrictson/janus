// Code generated by ent, DO NOT EDIT.

package jobconfig

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the jobconfig type in the database.
	Label = "job_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMaxConcurrentJobs holds the string denoting the max_concurrent_jobs field in the database.
	FieldMaxConcurrentJobs = "max_concurrent_jobs"
	// FieldDefaultTimeoutSeconds holds the string denoting the default_timeout_seconds field in the database.
	FieldDefaultTimeoutSeconds = "default_timeout_seconds"
	// Table holds the table name of the jobconfig in the database.
	Table = "job_configs"
)

// Columns holds all SQL columns for jobconfig fields.
var Columns = []string{
	FieldID,
	FieldMaxConcurrentJobs,
	FieldDefaultTimeoutSeconds,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultMaxConcurrentJobs holds the default value on creation for the "max_concurrent_jobs" field.
	DefaultMaxConcurrentJobs int
	// DefaultDefaultTimeoutSeconds holds the default value on creation for the "default_timeout_seconds" field.
	DefaultDefaultTimeoutSeconds int
)

// OrderOption defines the ordering options for the JobConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMaxConcurrentJobs orders the results by the max_concurrent_jobs field.
func ByMaxConcurrentJobs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxConcurrentJobs, opts...).ToFunc()
}

// ByDefaultTimeoutSeconds orders the results by the default_timeout_seconds field.
func ByDefaultTimeoutSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDefaultTimeoutSeconds, opts...).ToFunc()
}
