// Code generated by ent, DO NOT EDIT.

package authconfig

import (
	"entgo.io/ent/dialect/sql"
	"github.com/lbrictson/janus/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldID, id))
}

// EnableSSO applies equality check predicate on the "enable_sso" field. It's identical to EnableSSOEQ.
func EnableSSO(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldEnableSSO, v))
}

// DisablePasswordLogin applies equality check predicate on the "disable_password_login" field. It's identical to DisablePasswordLoginEQ.
func DisablePasswordLogin(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldDisablePasswordLogin, v))
}

// SSOProvider applies equality check predicate on the "sso_provider" field. It's identical to SSOProviderEQ.
func SSOProvider(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOProvider, v))
}

// SSOClientID applies equality check predicate on the "sso_client_id" field. It's identical to SSOClientIDEQ.
func SSOClientID(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOClientID, v))
}

// SSOClientSecret applies equality check predicate on the "sso_client_secret" field. It's identical to SSOClientSecretEQ.
func SSOClientSecret(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOClientSecret, v))
}

// SSORedirectURI applies equality check predicate on the "sso_redirect_uri" field. It's identical to SSORedirectURIEQ.
func SSORedirectURI(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSORedirectURI, v))
}

// SSOAuthorizationURL applies equality check predicate on the "sso_authorization_url" field. It's identical to SSOAuthorizationURLEQ.
func SSOAuthorizationURL(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOAuthorizationURL, v))
}

// SSOTokenURL applies equality check predicate on the "sso_token_url" field. It's identical to SSOTokenURLEQ.
func SSOTokenURL(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOTokenURL, v))
}

// SSOUserInfoURL applies equality check predicate on the "sso_user_info_url" field. It's identical to SSOUserInfoURLEQ.
func SSOUserInfoURL(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOUserInfoURL, v))
}

// EntraTenantID applies equality check predicate on the "entra_tenant_id" field. It's identical to EntraTenantIDEQ.
func EntraTenantID(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldEntraTenantID, v))
}

// GoogleAllowedDomains applies equality check predicate on the "google_allowed_domains" field. It's identical to GoogleAllowedDomainsEQ.
func GoogleAllowedDomains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldGoogleAllowedDomains, v))
}

// SessionKey applies equality check predicate on the "session_key" field. It's identical to SessionKeyEQ.
func SessionKey(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSessionKey, v))
}

// EnableSSOEQ applies the EQ predicate on the "enable_sso" field.
func EnableSSOEQ(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldEnableSSO, v))
}

// EnableSSONEQ applies the NEQ predicate on the "enable_sso" field.
func EnableSSONEQ(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldEnableSSO, v))
}

// DisablePasswordLoginEQ applies the EQ predicate on the "disable_password_login" field.
func DisablePasswordLoginEQ(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldDisablePasswordLogin, v))
}

// DisablePasswordLoginNEQ applies the NEQ predicate on the "disable_password_login" field.
func DisablePasswordLoginNEQ(v bool) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldDisablePasswordLogin, v))
}

// SSOProviderEQ applies the EQ predicate on the "sso_provider" field.
func SSOProviderEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOProvider, v))
}

// SSOProviderNEQ applies the NEQ predicate on the "sso_provider" field.
func SSOProviderNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOProvider, v))
}

// SSOProviderIn applies the In predicate on the "sso_provider" field.
func SSOProviderIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOProvider, vs...))
}

// SSOProviderNotIn applies the NotIn predicate on the "sso_provider" field.
func SSOProviderNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOProvider, vs...))
}

// SSOProviderGT applies the GT predicate on the "sso_provider" field.
func SSOProviderGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOProvider, v))
}

// SSOProviderGTE applies the GTE predicate on the "sso_provider" field.
func SSOProviderGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOProvider, v))
}

// SSOProviderLT applies the LT predicate on the "sso_provider" field.
func SSOProviderLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOProvider, v))
}

// SSOProviderLTE applies the LTE predicate on the "sso_provider" field.
func SSOProviderLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOProvider, v))
}

// SSOProviderContains applies the Contains predicate on the "sso_provider" field.
func SSOProviderContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOProvider, v))
}

// SSOProviderHasPrefix applies the HasPrefix predicate on the "sso_provider" field.
func SSOProviderHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOProvider, v))
}

// SSOProviderHasSuffix applies the HasSuffix predicate on the "sso_provider" field.
func SSOProviderHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOProvider, v))
}

// SSOProviderEqualFold applies the EqualFold predicate on the "sso_provider" field.
func SSOProviderEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOProvider, v))
}

// SSOProviderContainsFold applies the ContainsFold predicate on the "sso_provider" field.
func SSOProviderContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOProvider, v))
}

// SSOClientIDEQ applies the EQ predicate on the "sso_client_id" field.
func SSOClientIDEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOClientID, v))
}

// SSOClientIDNEQ applies the NEQ predicate on the "sso_client_id" field.
func SSOClientIDNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOClientID, v))
}

// SSOClientIDIn applies the In predicate on the "sso_client_id" field.
func SSOClientIDIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOClientID, vs...))
}

// SSOClientIDNotIn applies the NotIn predicate on the "sso_client_id" field.
func SSOClientIDNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOClientID, vs...))
}

// SSOClientIDGT applies the GT predicate on the "sso_client_id" field.
func SSOClientIDGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOClientID, v))
}

// SSOClientIDGTE applies the GTE predicate on the "sso_client_id" field.
func SSOClientIDGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOClientID, v))
}

// SSOClientIDLT applies the LT predicate on the "sso_client_id" field.
func SSOClientIDLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOClientID, v))
}

// SSOClientIDLTE applies the LTE predicate on the "sso_client_id" field.
func SSOClientIDLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOClientID, v))
}

// SSOClientIDContains applies the Contains predicate on the "sso_client_id" field.
func SSOClientIDContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOClientID, v))
}

// SSOClientIDHasPrefix applies the HasPrefix predicate on the "sso_client_id" field.
func SSOClientIDHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOClientID, v))
}

// SSOClientIDHasSuffix applies the HasSuffix predicate on the "sso_client_id" field.
func SSOClientIDHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOClientID, v))
}

// SSOClientIDEqualFold applies the EqualFold predicate on the "sso_client_id" field.
func SSOClientIDEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOClientID, v))
}

// SSOClientIDContainsFold applies the ContainsFold predicate on the "sso_client_id" field.
func SSOClientIDContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOClientID, v))
}

// SSOClientSecretEQ applies the EQ predicate on the "sso_client_secret" field.
func SSOClientSecretEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOClientSecret, v))
}

// SSOClientSecretNEQ applies the NEQ predicate on the "sso_client_secret" field.
func SSOClientSecretNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOClientSecret, v))
}

// SSOClientSecretIn applies the In predicate on the "sso_client_secret" field.
func SSOClientSecretIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOClientSecret, vs...))
}

// SSOClientSecretNotIn applies the NotIn predicate on the "sso_client_secret" field.
func SSOClientSecretNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOClientSecret, vs...))
}

// SSOClientSecretGT applies the GT predicate on the "sso_client_secret" field.
func SSOClientSecretGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOClientSecret, v))
}

// SSOClientSecretGTE applies the GTE predicate on the "sso_client_secret" field.
func SSOClientSecretGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOClientSecret, v))
}

// SSOClientSecretLT applies the LT predicate on the "sso_client_secret" field.
func SSOClientSecretLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOClientSecret, v))
}

// SSOClientSecretLTE applies the LTE predicate on the "sso_client_secret" field.
func SSOClientSecretLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOClientSecret, v))
}

// SSOClientSecretContains applies the Contains predicate on the "sso_client_secret" field.
func SSOClientSecretContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOClientSecret, v))
}

// SSOClientSecretHasPrefix applies the HasPrefix predicate on the "sso_client_secret" field.
func SSOClientSecretHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOClientSecret, v))
}

// SSOClientSecretHasSuffix applies the HasSuffix predicate on the "sso_client_secret" field.
func SSOClientSecretHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOClientSecret, v))
}

// SSOClientSecretEqualFold applies the EqualFold predicate on the "sso_client_secret" field.
func SSOClientSecretEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOClientSecret, v))
}

// SSOClientSecretContainsFold applies the ContainsFold predicate on the "sso_client_secret" field.
func SSOClientSecretContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOClientSecret, v))
}

// SSORedirectURIEQ applies the EQ predicate on the "sso_redirect_uri" field.
func SSORedirectURIEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSORedirectURI, v))
}

// SSORedirectURINEQ applies the NEQ predicate on the "sso_redirect_uri" field.
func SSORedirectURINEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSORedirectURI, v))
}

// SSORedirectURIIn applies the In predicate on the "sso_redirect_uri" field.
func SSORedirectURIIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSORedirectURI, vs...))
}

// SSORedirectURINotIn applies the NotIn predicate on the "sso_redirect_uri" field.
func SSORedirectURINotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSORedirectURI, vs...))
}

// SSORedirectURIGT applies the GT predicate on the "sso_redirect_uri" field.
func SSORedirectURIGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSORedirectURI, v))
}

// SSORedirectURIGTE applies the GTE predicate on the "sso_redirect_uri" field.
func SSORedirectURIGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSORedirectURI, v))
}

// SSORedirectURILT applies the LT predicate on the "sso_redirect_uri" field.
func SSORedirectURILT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSORedirectURI, v))
}

// SSORedirectURILTE applies the LTE predicate on the "sso_redirect_uri" field.
func SSORedirectURILTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSORedirectURI, v))
}

// SSORedirectURIContains applies the Contains predicate on the "sso_redirect_uri" field.
func SSORedirectURIContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSORedirectURI, v))
}

// SSORedirectURIHasPrefix applies the HasPrefix predicate on the "sso_redirect_uri" field.
func SSORedirectURIHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSORedirectURI, v))
}

// SSORedirectURIHasSuffix applies the HasSuffix predicate on the "sso_redirect_uri" field.
func SSORedirectURIHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSORedirectURI, v))
}

// SSORedirectURIEqualFold applies the EqualFold predicate on the "sso_redirect_uri" field.
func SSORedirectURIEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSORedirectURI, v))
}

// SSORedirectURIContainsFold applies the ContainsFold predicate on the "sso_redirect_uri" field.
func SSORedirectURIContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSORedirectURI, v))
}

// SSOAuthorizationURLEQ applies the EQ predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLNEQ applies the NEQ predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLIn applies the In predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOAuthorizationURL, vs...))
}

// SSOAuthorizationURLNotIn applies the NotIn predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOAuthorizationURL, vs...))
}

// SSOAuthorizationURLGT applies the GT predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLGTE applies the GTE predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLLT applies the LT predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLLTE applies the LTE predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLContains applies the Contains predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLHasPrefix applies the HasPrefix predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLHasSuffix applies the HasSuffix predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLEqualFold applies the EqualFold predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOAuthorizationURL, v))
}

// SSOAuthorizationURLContainsFold applies the ContainsFold predicate on the "sso_authorization_url" field.
func SSOAuthorizationURLContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOAuthorizationURL, v))
}

// SSOTokenURLEQ applies the EQ predicate on the "sso_token_url" field.
func SSOTokenURLEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOTokenURL, v))
}

// SSOTokenURLNEQ applies the NEQ predicate on the "sso_token_url" field.
func SSOTokenURLNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOTokenURL, v))
}

// SSOTokenURLIn applies the In predicate on the "sso_token_url" field.
func SSOTokenURLIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOTokenURL, vs...))
}

// SSOTokenURLNotIn applies the NotIn predicate on the "sso_token_url" field.
func SSOTokenURLNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOTokenURL, vs...))
}

// SSOTokenURLGT applies the GT predicate on the "sso_token_url" field.
func SSOTokenURLGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOTokenURL, v))
}

// SSOTokenURLGTE applies the GTE predicate on the "sso_token_url" field.
func SSOTokenURLGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOTokenURL, v))
}

// SSOTokenURLLT applies the LT predicate on the "sso_token_url" field.
func SSOTokenURLLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOTokenURL, v))
}

// SSOTokenURLLTE applies the LTE predicate on the "sso_token_url" field.
func SSOTokenURLLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOTokenURL, v))
}

// SSOTokenURLContains applies the Contains predicate on the "sso_token_url" field.
func SSOTokenURLContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOTokenURL, v))
}

// SSOTokenURLHasPrefix applies the HasPrefix predicate on the "sso_token_url" field.
func SSOTokenURLHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOTokenURL, v))
}

// SSOTokenURLHasSuffix applies the HasSuffix predicate on the "sso_token_url" field.
func SSOTokenURLHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOTokenURL, v))
}

// SSOTokenURLEqualFold applies the EqualFold predicate on the "sso_token_url" field.
func SSOTokenURLEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOTokenURL, v))
}

// SSOTokenURLContainsFold applies the ContainsFold predicate on the "sso_token_url" field.
func SSOTokenURLContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOTokenURL, v))
}

// SSOUserInfoURLEQ applies the EQ predicate on the "sso_user_info_url" field.
func SSOUserInfoURLEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLNEQ applies the NEQ predicate on the "sso_user_info_url" field.
func SSOUserInfoURLNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLIn applies the In predicate on the "sso_user_info_url" field.
func SSOUserInfoURLIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSSOUserInfoURL, vs...))
}

// SSOUserInfoURLNotIn applies the NotIn predicate on the "sso_user_info_url" field.
func SSOUserInfoURLNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSSOUserInfoURL, vs...))
}

// SSOUserInfoURLGT applies the GT predicate on the "sso_user_info_url" field.
func SSOUserInfoURLGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLGTE applies the GTE predicate on the "sso_user_info_url" field.
func SSOUserInfoURLGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLLT applies the LT predicate on the "sso_user_info_url" field.
func SSOUserInfoURLLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLLTE applies the LTE predicate on the "sso_user_info_url" field.
func SSOUserInfoURLLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLContains applies the Contains predicate on the "sso_user_info_url" field.
func SSOUserInfoURLContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLHasPrefix applies the HasPrefix predicate on the "sso_user_info_url" field.
func SSOUserInfoURLHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLHasSuffix applies the HasSuffix predicate on the "sso_user_info_url" field.
func SSOUserInfoURLHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLEqualFold applies the EqualFold predicate on the "sso_user_info_url" field.
func SSOUserInfoURLEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldSSOUserInfoURL, v))
}

// SSOUserInfoURLContainsFold applies the ContainsFold predicate on the "sso_user_info_url" field.
func SSOUserInfoURLContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldSSOUserInfoURL, v))
}

// EntraTenantIDEQ applies the EQ predicate on the "entra_tenant_id" field.
func EntraTenantIDEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldEntraTenantID, v))
}

// EntraTenantIDNEQ applies the NEQ predicate on the "entra_tenant_id" field.
func EntraTenantIDNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldEntraTenantID, v))
}

// EntraTenantIDIn applies the In predicate on the "entra_tenant_id" field.
func EntraTenantIDIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldEntraTenantID, vs...))
}

// EntraTenantIDNotIn applies the NotIn predicate on the "entra_tenant_id" field.
func EntraTenantIDNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldEntraTenantID, vs...))
}

// EntraTenantIDGT applies the GT predicate on the "entra_tenant_id" field.
func EntraTenantIDGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldEntraTenantID, v))
}

// EntraTenantIDGTE applies the GTE predicate on the "entra_tenant_id" field.
func EntraTenantIDGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldEntraTenantID, v))
}

// EntraTenantIDLT applies the LT predicate on the "entra_tenant_id" field.
func EntraTenantIDLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldEntraTenantID, v))
}

// EntraTenantIDLTE applies the LTE predicate on the "entra_tenant_id" field.
func EntraTenantIDLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldEntraTenantID, v))
}

// EntraTenantIDContains applies the Contains predicate on the "entra_tenant_id" field.
func EntraTenantIDContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldEntraTenantID, v))
}

// EntraTenantIDHasPrefix applies the HasPrefix predicate on the "entra_tenant_id" field.
func EntraTenantIDHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldEntraTenantID, v))
}

// EntraTenantIDHasSuffix applies the HasSuffix predicate on the "entra_tenant_id" field.
func EntraTenantIDHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldEntraTenantID, v))
}

// EntraTenantIDEqualFold applies the EqualFold predicate on the "entra_tenant_id" field.
func EntraTenantIDEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldEntraTenantID, v))
}

// EntraTenantIDContainsFold applies the ContainsFold predicate on the "entra_tenant_id" field.
func EntraTenantIDContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldEntraTenantID, v))
}

// GoogleAllowedDomainsEQ applies the EQ predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsNEQ applies the NEQ predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsNEQ(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsIn applies the In predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldGoogleAllowedDomains, vs...))
}

// GoogleAllowedDomainsNotIn applies the NotIn predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsNotIn(vs ...string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldGoogleAllowedDomains, vs...))
}

// GoogleAllowedDomainsGT applies the GT predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsGT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsGTE applies the GTE predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsGTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsLT applies the LT predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsLT(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsLTE applies the LTE predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsLTE(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsContains applies the Contains predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsContains(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContains(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsHasPrefix applies the HasPrefix predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsHasPrefix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasPrefix(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsHasSuffix applies the HasSuffix predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsHasSuffix(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldHasSuffix(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsEqualFold applies the EqualFold predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsEqualFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEqualFold(FieldGoogleAllowedDomains, v))
}

// GoogleAllowedDomainsContainsFold applies the ContainsFold predicate on the "google_allowed_domains" field.
func GoogleAllowedDomainsContainsFold(v string) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldContainsFold(FieldGoogleAllowedDomains, v))
}

// SessionKeyEQ applies the EQ predicate on the "session_key" field.
func SessionKeyEQ(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldEQ(FieldSessionKey, v))
}

// SessionKeyNEQ applies the NEQ predicate on the "session_key" field.
func SessionKeyNEQ(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNEQ(FieldSessionKey, v))
}

// SessionKeyIn applies the In predicate on the "session_key" field.
func SessionKeyIn(vs ...[]byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldIn(FieldSessionKey, vs...))
}

// SessionKeyNotIn applies the NotIn predicate on the "session_key" field.
func SessionKeyNotIn(vs ...[]byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldNotIn(FieldSessionKey, vs...))
}

// SessionKeyGT applies the GT predicate on the "session_key" field.
func SessionKeyGT(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGT(FieldSessionKey, v))
}

// SessionKeyGTE applies the GTE predicate on the "session_key" field.
func SessionKeyGTE(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldGTE(FieldSessionKey, v))
}

// SessionKeyLT applies the LT predicate on the "session_key" field.
func SessionKeyLT(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLT(FieldSessionKey, v))
}

// SessionKeyLTE applies the LTE predicate on the "session_key" field.
func SessionKeyLTE(v []byte) predicate.AuthConfig {
	return predicate.AuthConfig(sql.FieldLTE(FieldSessionKey, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuthConfig) predicate.AuthConfig {
	return predicate.AuthConfig(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuthConfig) predicate.AuthConfig {
	return predicate.AuthConfig(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuthConfig) predicate.AuthConfig {
	return predicate.AuthConfig(sql.NotPredicates(p))
}
