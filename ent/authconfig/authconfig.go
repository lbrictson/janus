// Code generated by ent, DO NOT EDIT.

package authconfig

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the authconfig type in the database.
	Label = "auth_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEnableSSO holds the string denoting the enable_sso field in the database.
	FieldEnableSSO = "enable_sso"
	// FieldDisablePasswordLogin holds the string denoting the disable_password_login field in the database.
	FieldDisablePasswordLogin = "disable_password_login"
	// FieldSSOProvider holds the string denoting the sso_provider field in the database.
	FieldSSOProvider = "sso_provider"
	// FieldSSOClientID holds the string denoting the sso_client_id field in the database.
	FieldSSOClientID = "sso_client_id"
	// FieldSSOClientSecret holds the string denoting the sso_client_secret field in the database.
	FieldSSOClientSecret = "sso_client_secret"
	// FieldSSORedirectURI holds the string denoting the sso_redirect_uri field in the database.
	FieldSSORedirectURI = "sso_redirect_uri"
	// FieldSSOAuthorizationURL holds the string denoting the sso_authorization_url field in the database.
	FieldSSOAuthorizationURL = "sso_authorization_url"
	// FieldSSOTokenURL holds the string denoting the sso_token_url field in the database.
	FieldSSOTokenURL = "sso_token_url"
	// FieldSSOUserInfoURL holds the string denoting the sso_user_info_url field in the database.
	FieldSSOUserInfoURL = "sso_user_info_url"
	// FieldEntraTenantID holds the string denoting the entra_tenant_id field in the database.
	FieldEntraTenantID = "entra_tenant_id"
	// FieldGoogleAllowedDomains holds the string denoting the google_allowed_domains field in the database.
	FieldGoogleAllowedDomains = "google_allowed_domains"
	// FieldSessionKey holds the string denoting the session_key field in the database.
	FieldSessionKey = "session_key"
	// Table holds the table name of the authconfig in the database.
	Table = "auth_configs"
)

// Columns holds all SQL columns for authconfig fields.
var Columns = []string{
	FieldID,
	FieldEnableSSO,
	FieldDisablePasswordLogin,
	FieldSSOProvider,
	FieldSSOClientID,
	FieldSSOClientSecret,
	FieldSSORedirectURI,
	FieldSSOAuthorizationURL,
	FieldSSOTokenURL,
	FieldSSOUserInfoURL,
	FieldEntraTenantID,
	FieldGoogleAllowedDomains,
	FieldSessionKey,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEnableSSO holds the default value on creation for the "enable_sso" field.
	DefaultEnableSSO bool
	// DefaultDisablePasswordLogin holds the default value on creation for the "disable_password_login" field.
	DefaultDisablePasswordLogin bool
	// DefaultSSOProvider holds the default value on creation for the "sso_provider" field.
	DefaultSSOProvider string
	// DefaultSSOClientID holds the default value on creation for the "sso_client_id" field.
	DefaultSSOClientID string
	// DefaultSSOClientSecret holds the default value on creation for the "sso_client_secret" field.
	DefaultSSOClientSecret string
	// DefaultSSORedirectURI holds the default value on creation for the "sso_redirect_uri" field.
	DefaultSSORedirectURI string
	// DefaultSSOAuthorizationURL holds the default value on creation for the "sso_authorization_url" field.
	DefaultSSOAuthorizationURL string
	// DefaultSSOTokenURL holds the default value on creation for the "sso_token_url" field.
	DefaultSSOTokenURL string
	// DefaultSSOUserInfoURL holds the default value on creation for the "sso_user_info_url" field.
	DefaultSSOUserInfoURL string
	// DefaultEntraTenantID holds the default value on creation for the "entra_tenant_id" field.
	DefaultEntraTenantID string
	// DefaultGoogleAllowedDomains holds the default value on creation for the "google_allowed_domains" field.
	DefaultGoogleAllowedDomains string
	// DefaultSessionKey holds the default value on creation for the "session_key" field.
	DefaultSessionKey []byte
)

// OrderOption defines the ordering options for the AuthConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEnableSSO orders the results by the enable_sso field.
func ByEnableSSO(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnableSSO, opts...).ToFunc()
}

// ByDisablePasswordLogin orders the results by the disable_password_login field.
func ByDisablePasswordLogin(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDisablePasswordLogin, opts...).ToFunc()
}

// BySSOProvider orders the results by the sso_provider field.
func BySSOProvider(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOProvider, opts...).ToFunc()
}

// BySSOClientID orders the results by the sso_client_id field.
func BySSOClientID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOClientID, opts...).ToFunc()
}

// BySSOClientSecret orders the results by the sso_client_secret field.
func BySSOClientSecret(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOClientSecret, opts...).ToFunc()
}

// BySSORedirectURI orders the results by the sso_redirect_uri field.
func BySSORedirectURI(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSORedirectURI, opts...).ToFunc()
}

// BySSOAuthorizationURL orders the results by the sso_authorization_url field.
func BySSOAuthorizationURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOAuthorizationURL, opts...).ToFunc()
}

// BySSOTokenURL orders the results by the sso_token_url field.
func BySSOTokenURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOTokenURL, opts...).ToFunc()
}

// BySSOUserInfoURL orders the results by the sso_user_info_url field.
func BySSOUserInfoURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSSOUserInfoURL, opts...).ToFunc()
}

// ByEntraTenantID orders the results by the entra_tenant_id field.
func ByEntraTenantID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntraTenantID, opts...).ToFunc()
}

// ByGoogleAllowedDomains orders the results by the google_allowed_domains field.
func ByGoogleAllowedDomains(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoogleAllowedDomains, opts...).ToFunc()
}
