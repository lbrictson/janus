// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/lbrictson/janus/ent/authconfig"
	"github.com/lbrictson/janus/ent/job"
	"github.com/lbrictson/janus/ent/jobhistory"
	"github.com/lbrictson/janus/ent/projectuser"
	"github.com/lbrictson/janus/ent/schema"
	"github.com/lbrictson/janus/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authconfigFields := schema.AuthConfig{}.Fields()
	_ = authconfigFields
	// authconfigDescEnableSSO is the schema descriptor for enable_sso field.
	authconfigDescEnableSSO := authconfigFields[0].Descriptor()
	// authconfig.DefaultEnableSSO holds the default value on creation for the enable_sso field.
	authconfig.DefaultEnableSSO = authconfigDescEnableSSO.Default.(bool)
	// authconfigDescDisablePasswordLogin is the schema descriptor for disable_password_login field.
	authconfigDescDisablePasswordLogin := authconfigFields[1].Descriptor()
	// authconfig.DefaultDisablePasswordLogin holds the default value on creation for the disable_password_login field.
	authconfig.DefaultDisablePasswordLogin = authconfigDescDisablePasswordLogin.Default.(bool)
	// authconfigDescSSOProvider is the schema descriptor for sso_provider field.
	authconfigDescSSOProvider := authconfigFields[2].Descriptor()
	// authconfig.DefaultSSOProvider holds the default value on creation for the sso_provider field.
	authconfig.DefaultSSOProvider = authconfigDescSSOProvider.Default.(string)
	// authconfigDescSSOClientID is the schema descriptor for sso_client_id field.
	authconfigDescSSOClientID := authconfigFields[3].Descriptor()
	// authconfig.DefaultSSOClientID holds the default value on creation for the sso_client_id field.
	authconfig.DefaultSSOClientID = authconfigDescSSOClientID.Default.(string)
	// authconfigDescSSOClientSecret is the schema descriptor for sso_client_secret field.
	authconfigDescSSOClientSecret := authconfigFields[4].Descriptor()
	// authconfig.DefaultSSOClientSecret holds the default value on creation for the sso_client_secret field.
	authconfig.DefaultSSOClientSecret = authconfigDescSSOClientSecret.Default.(string)
	// authconfigDescSSORedirectURI is the schema descriptor for sso_redirect_uri field.
	authconfigDescSSORedirectURI := authconfigFields[5].Descriptor()
	// authconfig.DefaultSSORedirectURI holds the default value on creation for the sso_redirect_uri field.
	authconfig.DefaultSSORedirectURI = authconfigDescSSORedirectURI.Default.(string)
	// authconfigDescSSOAuthorizationURL is the schema descriptor for sso_authorization_url field.
	authconfigDescSSOAuthorizationURL := authconfigFields[6].Descriptor()
	// authconfig.DefaultSSOAuthorizationURL holds the default value on creation for the sso_authorization_url field.
	authconfig.DefaultSSOAuthorizationURL = authconfigDescSSOAuthorizationURL.Default.(string)
	// authconfigDescSSOTokenURL is the schema descriptor for sso_token_url field.
	authconfigDescSSOTokenURL := authconfigFields[7].Descriptor()
	// authconfig.DefaultSSOTokenURL holds the default value on creation for the sso_token_url field.
	authconfig.DefaultSSOTokenURL = authconfigDescSSOTokenURL.Default.(string)
	// authconfigDescSSOUserInfoURL is the schema descriptor for sso_user_info_url field.
	authconfigDescSSOUserInfoURL := authconfigFields[8].Descriptor()
	// authconfig.DefaultSSOUserInfoURL holds the default value on creation for the sso_user_info_url field.
	authconfig.DefaultSSOUserInfoURL = authconfigDescSSOUserInfoURL.Default.(string)
	// authconfigDescEntraTenantID is the schema descriptor for entra_tenant_id field.
	authconfigDescEntraTenantID := authconfigFields[9].Descriptor()
	// authconfig.DefaultEntraTenantID holds the default value on creation for the entra_tenant_id field.
	authconfig.DefaultEntraTenantID = authconfigDescEntraTenantID.Default.(string)
	// authconfigDescGoogleAllowedDomains is the schema descriptor for google_allowed_domains field.
	authconfigDescGoogleAllowedDomains := authconfigFields[10].Descriptor()
	// authconfig.DefaultGoogleAllowedDomains holds the default value on creation for the google_allowed_domains field.
	authconfig.DefaultGoogleAllowedDomains = authconfigDescGoogleAllowedDomains.Default.(string)
	// authconfigDescSessionKey is the schema descriptor for session_key field.
	authconfigDescSessionKey := authconfigFields[11].Descriptor()
	// authconfig.DefaultSessionKey holds the default value on creation for the session_key field.
	authconfig.DefaultSessionKey = authconfigDescSessionKey.Default.([]byte)
	jobFields := schema.Job{}.Fields()
	_ = jobFields
	// jobDescName is the schema descriptor for name field.
	jobDescName := jobFields[0].Descriptor()
	// job.NameValidator is a validator for the "name" field. It is called by the builders before save.
	job.NameValidator = jobDescName.Validators[0].(func(string) error)
	// jobDescScheduleEnabled is the schema descriptor for schedule_enabled field.
	jobDescScheduleEnabled := jobFields[3].Descriptor()
	// job.DefaultScheduleEnabled holds the default value on creation for the schedule_enabled field.
	job.DefaultScheduleEnabled = jobDescScheduleEnabled.Default.(bool)
	// jobDescAllowConcurrentRuns is the schema descriptor for allow_concurrent_runs field.
	jobDescAllowConcurrentRuns := jobFields[4].Descriptor()
	// job.DefaultAllowConcurrentRuns holds the default value on creation for the allow_concurrent_runs field.
	job.DefaultAllowConcurrentRuns = jobDescAllowConcurrentRuns.Default.(bool)
	// jobDescRequiresFileUpload is the schema descriptor for requires_file_upload field.
	jobDescRequiresFileUpload := jobFields[6].Descriptor()
	// job.DefaultRequiresFileUpload holds the default value on creation for the requires_file_upload field.
	job.DefaultRequiresFileUpload = jobDescRequiresFileUpload.Default.(bool)
	// jobDescAverageDurationMs is the schema descriptor for average_duration_ms field.
	jobDescAverageDurationMs := jobFields[7].Descriptor()
	// job.DefaultAverageDurationMs holds the default value on creation for the average_duration_ms field.
	job.DefaultAverageDurationMs = jobDescAverageDurationMs.Default.(int64)
	// jobDescTimeoutSeconds is the schema descriptor for timeout_seconds field.
	jobDescTimeoutSeconds := jobFields[8].Descriptor()
	// job.DefaultTimeoutSeconds holds the default value on creation for the timeout_seconds field.
	job.DefaultTimeoutSeconds = jobDescTimeoutSeconds.Default.(int)
	// jobDescLastEditTime is the schema descriptor for last_edit_time field.
	jobDescLastEditTime := jobFields[9].Descriptor()
	// job.UpdateDefaultLastEditTime holds the default value on update for the last_edit_time field.
	job.UpdateDefaultLastEditTime = jobDescLastEditTime.UpdateDefault.(func() time.Time)
	// jobDescCreatedAt is the schema descriptor for created_at field.
	jobDescCreatedAt := jobFields[10].Descriptor()
	// job.DefaultCreatedAt holds the default value on creation for the created_at field.
	job.DefaultCreatedAt = jobDescCreatedAt.Default.(func() time.Time)
	// jobDescLastRunSuccess is the schema descriptor for last_run_success field.
	jobDescLastRunSuccess := jobFields[16].Descriptor()
	// job.DefaultLastRunSuccess holds the default value on creation for the last_run_success field.
	job.DefaultLastRunSuccess = jobDescLastRunSuccess.Default.(bool)
	jobhistoryFields := schema.JobHistory{}.Fields()
	_ = jobhistoryFields
	// jobhistoryDescOutput is the schema descriptor for output field.
	jobhistoryDescOutput := jobhistoryFields[3].Descriptor()
	// jobhistory.DefaultOutput holds the default value on creation for the output field.
	jobhistory.DefaultOutput = jobhistoryDescOutput.Default.(string)
	// jobhistoryDescCreatedAt is the schema descriptor for created_at field.
	jobhistoryDescCreatedAt := jobhistoryFields[7].Descriptor()
	// jobhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobhistory.DefaultCreatedAt = jobhistoryDescCreatedAt.Default.(func() time.Time)
	// jobhistoryDescStatus is the schema descriptor for status field.
	jobhistoryDescStatus := jobhistoryFields[8].Descriptor()
	// jobhistory.DefaultStatus holds the default value on creation for the status field.
	jobhistory.DefaultStatus = jobhistoryDescStatus.Default.(string)
	// jobhistoryDescTrigger is the schema descriptor for trigger field.
	jobhistoryDescTrigger := jobhistoryFields[9].Descriptor()
	// jobhistory.DefaultTrigger holds the default value on creation for the trigger field.
	jobhistory.DefaultTrigger = jobhistoryDescTrigger.Default.(string)
	projectuserFields := schema.ProjectUser{}.Fields()
	_ = projectuserFields
	// projectuserDescCanEdit is the schema descriptor for can_edit field.
	projectuserDescCanEdit := projectuserFields[0].Descriptor()
	// projectuser.DefaultCanEdit holds the default value on creation for the can_edit field.
	projectuser.DefaultCanEdit = projectuserDescCanEdit.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAdmin is the schema descriptor for admin field.
	userDescAdmin := userFields[2].Descriptor()
	// user.DefaultAdmin holds the default value on creation for the admin field.
	user.DefaultAdmin = userDescAdmin.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescMustChangePassword is the schema descriptor for must_change_password field.
	userDescMustChangePassword := userFields[6].Descriptor()
	// user.DefaultMustChangePassword holds the default value on creation for the must_change_password field.
	user.DefaultMustChangePassword = userDescMustChangePassword.Default.(bool)
}
