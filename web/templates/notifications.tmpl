{{define "notifications"}}
<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Janus - Notifications</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/css/dark-theme.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation Header -->
    {{ template "navbar" . }}

    <!-- Main Content -->
    <div class="container py-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div class="d-flex gap-3 align-items-center">
                        <h5 class="card-title mb-0"></h5>
                        <a href="/notifications/new" class="btn btn-primary">Add Notification Channel</a>
                    </div>
                    <input type="text" class="form-control w-auto" id="channelSearch"
                           placeholder="Search channels..." onkeyup="filterChannels()">
                </div>

                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="channelsTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Last Used</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{range .Channels}}
                            <tr>
                                <td>{{.Name}}</td>
                                <td>
                                    <span class="badge bg-secondary">{{.Type}}</span>
                                </td>
                                <td>{{.LastUsed}}</td>
                                <td>
                                    <div class="d-flex gap-2">
                                        <button onclick="testChannel('{{.ID}}')" class="btn btn-primary btn-sm">Test</button>
                                        <a href="/notifications/{{.ID}}/edit" class="btn btn-outline-light btn-sm">Edit</a>
                                    </div>
                                </td>
                            </tr>
                            {{end}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    function filterChannels() {
        const input = document.getElementById('channelSearch');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('channelsTable');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {
            const nameCell = rows[i].getElementsByTagName('td')[0];
            const typeCell = rows[i].getElementsByTagName('td')[1];
            if (nameCell && typeCell) {
                const nameText = nameCell.textContent || nameCell.innerText;
                const typeText = typeCell.textContent || typeCell.innerText;
                if (nameText.toLowerCase().indexOf(filter) > -1 ||
                    typeText.toLowerCase().indexOf(filter) > -1) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    }

    function testChannel(channelId) {
        // You can implement the test functionality here
        // For example, make an API call to test the notification channel
        fetch(`/api/notifications/${channelId}/test`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => response.json())
        .then(data => {
            alert('Test notification sent successfully');
        })
        .catch(error => {
            alert('Error sending test notification');
        });
    }
    </script>
</body>
</html>
{{end}}